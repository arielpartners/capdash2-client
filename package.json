{
  "name": "capdash2-client",
  "description": "Web front-end for Shelter Capacity Dashboard v2",
  "version": "0.0.1",
  "license": "MIT",
  "author": {
    "name": "Charles Fulnecky",
    "email": "cfulnecky@arielpartners.com"
  },
  "contributors": [
    {
      "name": "Charles Fulnecky",
      "email": "cfulnecky@arielpartners.com",
      "url": "https://github.com/orgs/arielpartners/people/cmelion"
    },
    {
      "name": "Graig Janssen",
      "email": "graig.janssen@gmail.com",
      "url": "https://github.com/orgs/arielpartners/people/graigjanssen"
    },
    {
      "name": "Milo",
      "email": "milowebmaster@gmail.com",
      "url": "https://github.com/orgs/arielpartners/people/milokang"
    },
    {
      "name": "Craeg Strong",
      "email": "cstrong@arielpartners.com",
      "url": "https://github.com/orgs/arielpartners/people/cstrong"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/arielpartners/capdash2-client.git"
  },
  "bugs": {
    "url": "https://github.com/arielpartners/capdash2-client/issues",
    "email": "cstrong@arielpartners.com"
  },
  "keywords": [
    "angular4",
    "redux",
    "cucumberjs",
    "jasmine",
    "rxjs"
  ],
  "homepage": "https://github.com/arielpartners/capdash2-client#README.md",
  "scripts": {
    "build": "ng build",
    "e2e": "ng build --no-progress && concurrently \"npm run json-server\" \"ng e2e --proxy-config config/proxy.conf.json\" --kill-others --success first",
    "e2e-no-server": "ng e2e --no-serve --proxy-config config/proxy.conf.json",
    "hmr": "ng serve --open --hmr -e=hmr --proxy-config config/proxy.conf.json",
    "json-server": "nodemon --watch ./json-server/ ./json-server/server.js --delay 2",
    "lint": "ng lint",
    "ng": "ng",
    "start": "ng serve --proxy-config config/proxy.conf.json",
    "test": "NODE_ENV=test ng test --watch=false",
    "test-browser": "ng test",
    "coverage": "NODE_ENV=test ng test -cc",
    "coverage-open": "open ./coverage/index.html",
    "posttest": "npm run lint"
  },
  "engines": {
    "node": ">=6.9.5"
  },
  "private": true,
  "dependencies": {
    "@angular-redux/form": "^6.0.1",
    "@angular-redux/router": "^6.0.1",
    "@angular-redux/store": "^6.0.1",
    "@angular/common": "^4.1.1",
    "@angular/compiler": "^4.1.1",
    "@angular/core": "^4.1.1",
    "@angular/forms": "^4.1.1",
    "@angular/http": "^4.1.1",
    "@angular/platform-browser": "^4.1.1",
    "@angular/platform-browser-dynamic": "^4.1.1",
    "@angular/router": "^4.1.1",
    "@ng-bootstrap/ng-bootstrap": "^1.0.0-alpha.25",
    "bootstrap": "3.3.7",
    "core-js": "^2.4.1",
    "flag-icon-css": "^2.8.0",
    "font-awesome": "^4.7.0",
    "opensans-npm-webfont": "0.0.2",
    "redux": "^3.6.0",
    "redux-logger": "^3.0.1",
    "redux-observable": "^0.14.1",
    "redux-persist": "^4.7.1",
    "rxjs": "^5.1.0",
    "zone.js": "^0.8.4"
  },
  "devDependencies": {
    "@angular/cli": "1.0.3",
    "@angular/compiler-cli": "^4.1.1",
    "@angularclass/hmr": "^1.2.2",
    "@types/cucumber": "^2.0.1",
    "@types/jasmine": "2.5.47",
    "@types/node": "~7.0.18",
    "@types/redux-logger": "^3.0.0",
    "chai": "^3.5.0",
    "chai-as-promised": "^6.0.0",
    "codelyzer": "~3.0.1",
    "concurrently": "^3.4.0",
    "cucumber": "^2.1.0",
    "cucumber-html-reporter": "^0.5.0",
    "dhs-common-styles": "git+https://github.com/arielpartners/dhs-common-styles.git",
    "jasmine-core": "~2.6.1",
    "jasmine-spec-reporter": "~4.1.0",
    "json-server": "0.10.0",
    "karma": "~1.7.0",
    "karma-chrome-launcher": "~2.1.1",
    "karma-cli": "~1.0.1",
    "karma-coverage-istanbul-reporter": "^1.2.1",
    "karma-jasmine": "~1.1.0",
    "karma-jasmine-html-reporter": "^0.2.2",
    "karma-phantomjs-launcher": "^1.0.4",
    "karma-spec-reporter": "0.0.31",
    "less-loader": "^4.0.3",
    "ng2-mock-component": "0.0.6",
    "nodemon": "1.11.0",
    "phantomjs-prebuilt": "^2.1.14",
    "protractor": "~5.1.0",
    "protractor-cucumber-framework": "^3.1.0",
    "ts-node": "~3.0.4",
    "tslint": "~5.2.0",
    "typescript": "~2.3.2"
  },
  "config": {
    "clientPort": "4200",
    "apiPort": "3000",
    "defaultTarget": "http://localhost:",
    "baseURL": "/api/"
  }
}
